pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-cred') // Jenkins credential ID
        DOCKER_IMAGE = "mohdibrahimk/zomato:latest"
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/MohdKhal/DevOps-Project-Zomato-Kastro.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                        sonar-scanner \
                          -Dsonar.projectKey=zomato \
                          -Dsonar.projectName=zomato
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    timeout(time: 3, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }

        stage('Install NPM Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Trivy Scan') {
            steps {
                sh 'trivy fs . > trivy.txt'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-cred') {
                        sh "docker push ${DOCKER_IMAGE}"
                    }
                }
            }
        }
    }

    post {
        always {
            emailext attachLog: true,
                subject: "Build ${currentBuild.result}: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """
                    <html>
                    <body>
                        <div style="background-color:#FFA07A; padding:10px; margin-bottom:10px;">
                            <p style="color:white; font-weight:bold;">Project: ${env.JOB_NAME}</p>
                        </div>
                        <div style="background-color:#90EE90; padding:10px; margin-bottom:10px;">
                            <p style="color:white; font-weight:bold;">Build Number: ${env.BUILD_NUMBER}</p>
                        </div>
                        <div style="background-color:#87CEEB; padding:10px; margin-bottom:10px;">
                            <p style="color:white; font-weight:bold;">Result: ${currentBuild.result}</p>
                        </div>
                        <div style="background-color:#DDA0DD; padding:10px; margin-bottom:10px;">
                            <p style="color:white; font-weight:bold;">URL: ${env.BUILD_URL}</p>
                        </div>
                    </body>
                    </html>
                """,
                to: 'mohd.khaleel.in@gmail.com',
                mimeType: 'text/html',
                attachmentsPattern: 'trivy.txt'
        }
    }
}
